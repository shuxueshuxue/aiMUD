!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!Python	nameref	/the original name for the tag/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!Markdown	S,subsection	/level 2 sections/
!_TAG_KIND_DESCRIPTION!Markdown	T,l4subsection	/level 4 sections/
!_TAG_KIND_DESCRIPTION!Markdown	c,chapter	/chapters/
!_TAG_KIND_DESCRIPTION!Markdown	h,hashtag	/hashtags/
!_TAG_KIND_DESCRIPTION!Markdown	n,footnote	/footnotes/
!_TAG_KIND_DESCRIPTION!Markdown	s,section	/sections/
!_TAG_KIND_DESCRIPTION!Markdown	t,subsubsection	/level 3 sections/
!_TAG_KIND_DESCRIPTION!Markdown	u,l5subsection	/level 5 sections/
!_TAG_KIND_DESCRIPTION!Python	I,namespace	/name referring a module defined in other file/
!_TAG_KIND_DESCRIPTION!Python	Y,unknown	/name referring a class\/variable\/function\/module defined in other module/
!_TAG_KIND_DESCRIPTION!Python	c,class	/classes/
!_TAG_KIND_DESCRIPTION!Python	f,function	/functions/
!_TAG_KIND_DESCRIPTION!Python	i,module	/modules/
!_TAG_KIND_DESCRIPTION!Python	m,member	/class members/
!_TAG_KIND_DESCRIPTION!Python	v,variable	/variables/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!Markdown	1.1	/current.age/
!_TAG_PARSER_VERSION!Python	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	D:/Codebase/aimud/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.1.0	/v6.1.0/
!_TAG_ROLE_DESCRIPTION!Python!module	imported	/imported modules/
!_TAG_ROLE_DESCRIPTION!Python!module	indirectlyImported	/module imported in alternative name/
!_TAG_ROLE_DESCRIPTION!Python!module	namespace	/namespace from where classes\/variables\/functions are imported/
!_TAG_ROLE_DESCRIPTION!Python!unknown	imported	/imported from the other module/
!_TAG_ROLE_DESCRIPTION!Python!unknown	indirectlyImported	/classes\/variables\/functions\/modules imported in alternative name/
GAME_STATE_FILE	./server.py	/^GAME_STATE_FILE = "game.txt"$/;"	v
a	./json_test.py	/^    a = json.load(f)$/;"	v
action_in_progress	./server.py	/^action_in_progress = False$/;"	v
action_lock	./server.py	/^action_lock = threading.Lock()$/;"	v
aiMUD	./Readme.md	/^#game #aiMUD $/;"	h
broadcast	./server.py	/^def broadcast(message):$/;"	f
c	./server.py	/^c = db_conn.cursor()$/;"	v
callGPT	./llm.py	/^def callGPT(messages: list, model: str = 'gpt-3.5-turbo') -> str:$/;"	f	typeref:typename:str
connections	./server.py	/^connections = []  # List to keep track of all active connections$/;"	v
continueStory	./llm.py	/^def continueStory(progress: str, general_styles: str, player: str, player_input: str, keywords: /;"	f	typeref:typename:str
continue_story	./server.py	/^def continue_story(user_input, user_name) -> str:$/;"	f	typeref:typename:str
create_graph	./keywords.py	/^def create_graph(keywords: dict, directed: bool = False) -> nx.Graph:$/;"	f	typeref:typename:nx.Graph
db_conn	./server.py	/^db_conn = sqlite3.connect('user.db', check_same_thread=False)$/;"	v
example_keywords	./keywords.py	/^        example_keywords = {}$/;"	v
example_text	./keywords.py	/^        example_text = "As the autumn leaves began to fall, the ancient town of Eldershire seeme/;"	v
extract_key_words	./server.py	/^def extract_key_words(new_progress_segment):$/;"	f
extract_keywords	./keywords.py	/^def extract_keywords(current_keywords: dict, text: str) -> dict:$/;"	f	typeref:typename:dict
found_keywords	./keywords.py	/^        found_keywords = spot_keywords(text, keywords, depth=2, graph=keyword_graph)$/;"	v
game	./Readme.md	/^#game #aiMUD $/;"	h
general_styles	./llm.py	/^    general_styles = "A mystical and adventurous tone"$/;"	v
handle_client	./server.py	/^def handle_client(conn):$/;"	f
hash_password	./server.py	/^def hash_password(password):$/;"	f
keyword_graph	./keywords.py	/^        keyword_graph = create_graph(keywords, directed=False)$/;"	v
keywords	./keywords.py	/^        keywords = {$/;"	v
keywords	./llm.py	/^    keywords = {$/;"	v
listen_for_messages	./client.py	/^def listen_for_messages(sock):$/;"	f
load_game_state	./server.py	/^def load_game_state():$/;"	f
lock	./server.py	/^lock = threading.Lock()  # Lock for managing access to the connections list$/;"	v
main	./client.py	/^def main():$/;"	f
nx	./keywords.py	/^import networkx as nx$/;"	I	nameref:module:networkx
player	./llm.py	/^    player = "Eldric the Brave"$/;"	v
player_input	./llm.py	/^    player_input = "decides to explore the dark forest alone"$/;"	v
progress	./llm.py	/^    progress = "the hero has just discovered a hidden map"$/;"	v
recv_long_data	./client.py	/^def recv_long_data(sock):$/;"	f
recv_long_data	./server.py	/^def recv_long_data(conn):$/;"	f
result	./keywords.py	/^        result = extract_keywords(example_keywords, example_text)$/;"	v
save_game_state	./server.py	/^def save_game_state(state):$/;"	f
send_long_data	./client.py	/^def send_long_data(sock, data):$/;"	f
send_long_data	./server.py	/^def send_long_data(conn, data):$/;"	f
server_control	./server.py	/^def server_control():$/;"	f
shutdown_event	./server.py	/^shutdown_event = threading.Event()$/;"	v
spot_keywords	./keywords.py	/^def spot_keywords(text: str, keywords: dict, depth: int = 1, graph=None) -> set:$/;"	f	typeref:typename:set
start_server	./server.py	/^def start_server():$/;"	f
stop_server	./server.py	/^def stop_server():$/;"	f
story_continuation	./llm.py	/^    story_continuation = continueStory(progress, general_styles, player, player_input, keywords)$/;"	v
text	./keywords.py	/^        text = "You have arrived ballroom."$/;"	v
